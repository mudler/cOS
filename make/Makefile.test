#
# cOS-toolkit Makefile.test
#
#

GINKGO_ARGS?=-progress -v --failFast -flakeAttempts 3 -r

GINKGO?=$(shell which ginkgo 2> /dev/null)
ifeq ("$()","")
GINKGO="/usr/bin/ginkgo"
endif

VAGRANT?=$(shell which vagrant 2> /dev/null)
ifeq ("$(VAGRANT)","")
VAGRANT="/usr/bin/vagrant"
endif

test: test-clean vagrantfile prepare-test test-smoke test-upgrades-signed test-upgrades-unsigned test-features test-fallback test-recovery

#
# remove test artifacts
#

clean_test: test-clean

prepare-test: $(VAGRANT)
	vagrant box add cos packer/*.box
	cd $(ROOT_DIR)/tests && vagrant up || true

vagrantfile: $(ROOT_DIR)/tests/Vagrantfile $(VAGRANT)

$(ROOT_DIR)/tests/Vagrantfile: $(VAGRANT)
	cd $(ROOT_DIR)/tests && vagrant init cos

test-clean:
	(cd $(ROOT_DIR)/tests && vagrant destroy) 2> /dev/null || true
	(vagrant box remove cos) 2> /dev/null || true

$(VAGRANT):
	@echo "'vagrant' not found."
	@exit 1

test-fallback: $(GINKGO)
	cd $(ROOT_DIR)/tests && $(GINKGO) $(GINKGO_ARGS) ./fallback

test-features: $(GINKGO)
	cd $(ROOT_DIR)/tests && $(GINKGO) $(GINKGO_ARGS) ./features

test-upgrades-images-signed: $(GINKGO)
	cd $(ROOT_DIR)/tests && $(GINKGO) $(GINKGO_ARGS) ./upgrades-images-signed

test-upgrades-images-unsigned: $(GINKGO)
	cd $(ROOT_DIR)/tests && $(GINKGO) $(GINKGO_ARGS) ./upgrades-images-unsigned

test-smoke: $(GINKGO)
	cd $(ROOT_DIR)/tests && $(GINKGO) $(GINKGO_ARGS) ./smoke

test-recovery: $(GINKGO)
	cd $(ROOT_DIR)/tests && $(GINKGO) $(GINKGO_ARGS) ./recovery

$(GINKGO):
	@echo "'ginkgo' not found."
	@exit 1
